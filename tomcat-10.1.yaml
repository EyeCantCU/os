package:
  name: tomcat-10.1
  version: 10.1.28
  epoch: 0
  description: Apache Tomcat Web Server
  copyright:
    - license: Apache-2.0
  dependencies:
    provides:
      - tomcat=${{package.full-version}}
      - tomcat-10=${{package.full-version}}

data:
  - name: openjdk-versions
    items:
      21: "openjdk-21"
      17: "openjdk-17"
      11: "openjdk-11"

environment:
  contents:
    packages:
      - ant
      - build-base
      - busybox
      - ca-certificates-bundle
      - openjdk-17

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/apache/tomcat
      tag: ${{package.version}}
      expected-commit: aae1e30f78ba5ace25848084a500662ecff0b75f

  - runs: |
      cat <<EOF > build.properties
      skip.installer=true
      base.path=$PWD
      compile.debug=false
      EOF

subpackages:
  - range: openjdk-versions
    name: ${{package.name}}-${{range.value}}
    dependencies:
      runtime:
        - ${{range.value}}-default-jvm
        - tomcat-native
    pipeline:
      - runs: |
          export JAVA_HOME="/usr/lib/jvm/java-17-openjdk"

          ant -Dskip.build.java.version=true

          mkdir -p ${{targets.contextdir}}/usr/share/tomcat
          cp LICENSE ${{targets.contextdir}}/usr/share/tomcat/

          mkdir -p ${{targets.contextdir}}/usr/share/tomcat/bin
          cp output/build/bin/* ${{targets.contextdir}}/usr/share/tomcat/bin

          mkdir -p ${{targets.contextdir}}/usr/share/tomcat/conf
          cp output/build/conf/* ${{targets.contextdir}}/usr/share/tomcat/conf

          mkdir -p ${{targets.contextdir}}/usr/share/tomcat/lib
          cp output/build/lib/* ${{targets.contextdir}}/usr/share/tomcat/lib

          mkdir -p ${{targets.contextdir}}/usr/share/tomcat/logs
          mkdir -p ${{targets.contextdir}}/usr/share/tomcat/temp
          mkdir -p ${{targets.contextdir}}/usr/share/tomcat/webapps

          # This includes the manager and host-manager apps.
          # The apps are not directly usable without copying into the webapps directory.
          # See https://github.com/docker-library/tomcat/pull/181 for more context.
          mkdir -p ${{targets.contextdir}}/usr/share/tomcat/webapps.dist
          rm -rf output/build/webapps/examples
          cp -r output/build/webapps/* ${{targets.contextdir}}/usr/share/tomcat/webapps.dist/
    test:
      environment:
        contents:
          packages:
            - curl
        environment:
          LD_LIBRARY_PATH: "/usr/lib/tomcat-native"
      pipeline:
        - name: Test tomcat with OpenJDK ${{range.key}}
          uses: test/daemon-check-output
          with:
            setup: |
              #!/bin/sh -ex
              cp /usr/share/tomcat/webapps.dist/docs/appdev/sample/sample.war /usr/share/tomcat/webapps/
            start: "env JAVA_HOME=/usr/lib/jvm/java-${{range.key}}-openjdk /usr/share/tomcat/bin/catalina.sh run"
            timeout: 30
            expected_output: |
              Tomcat/${{package.version}}
              JVM.Version
              Deploying.*sample.war
              Server startup in
            post: |
              #!/bin/sh -e
              url=http://localhost:8080/sample/
              echo "testing $url"
              response=$(curl -s "$url") || {
                echo "curl $url failed $?"
                exit 1
              }
              expected="Sample.*Hello.*World.*Application"
              echo "$response" | grep -q "$expected" || {
                echo "response from $url did not contain \"$expected\""
                echo "response: $response"
                exit 1
              }
              echo "found \"$expected\" in output of curl $url"

update:
  enabled: true
  ignore-regex-patterns:
    - '-M\d+$'
  github:
    identifier: apache/tomcat
    use-tag: true
    tag-filter: 10.1.
